###############################################################
####################    服务端配置信息    ######################
###############################################################
# ip
netty.host=192.168.1.100
# netty 开放端口
netty.port=8905
# 服务id, 必须为大于0的整数
netty.server.id=5
# zk cluster
netty.zk.cluster=172.168.16.245:22181,172.168.16.245:32181,172.168.16.245:42181
# 数据库配置
db.url=jdbc:mysql://172.168.16.249:3306/ke?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
db.username=ke
db.password=123456
db.driver=com.mysql.jdbc.Driver
# kafka集群地址
bootstrap.servers=172.168.16.245:29092,172.168.16.245:39092,172.168.16.245:49092
# 如果为真，消费者的偏移量将在后台定期提交 // 默认为 true
enable.auto.commit=true
# 如果enable.auto.commit被设置为true，那么消费者偏移量自动提交到Kafka的毫秒频率。  // 默认 5000 = 5秒
auto.commit.interval.ms=1000
# 使用Kafka的组管理功能时用于检测使用者故障的超时。使用者向代理发送周期性的心跳，以指示其活动状态。
# 如果在此会话超时过期之前代理没有收到心跳，则代理将从组中删除此使用者并启动重新平衡。请注意，该值
# 必须在代理配置中配置的允许范围内。group.min.session.timeout.ms和group.max.session.timeout.ms。  // 默认10000
session.timeout.ms=10000
# 明了使用何种序列化方式将用户提供的key和vaule值序列化成字节。
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
# 明了使用何种序列化方式将用户提供的key和vaule值序列化成字节。
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer